

openapi: 3.0.0
info:
  title: 用户端 API
  version: 1.0.1
  description: |
    这是一个用于用户端的 API。通过该 API，可以作为开发。
    该文档提供了所有可用接口的详细说明。v326
  contact:
    name: dddddomas
    email: support@example.com
servers:
  - url: http://localhost:8889
    description: 测试环境
  - url: http://localhost:8888
    description: 生产环境

tags:
  - name: user
    description: 用户方面接口
  - name: Wallet
    description: 钱包方面接口
  - name: bet
    description: 注单方面接口
  - name: coin
    description: 加密货币外汇贵金属方面接口
  - name: ylWallet
    description: 盈利钱包方面接口
  - name: proxy
    description: 代理方面接口
  - name: common
    description: 基础接口

  - name: cfg
    description: 获取配置方面接口
  - name: admin
    description: 管理端接口-管理员管理
  - name: admin_usr
    description: 管理端接口-会员管理
  - name: admin_rpt
    description: 管理端接口-报表管理
  - name: admin_cfg
    description: 管理后台——配置方面接口
  - name: adm_wlt
    description: 管理后台——钱包方面接口

components:
  parameters:
    unamexx:
      name: uname
      in: cookie
      required: true
      schema:
        type: string
        default: "007"
    ClientIdHeader:
      name:  AuthChkMode
      in: header
      required: false
      schema:
        type: string
        default: "jwt"
      description:  cookie or jwt

  securitySchemes:
    JwtAuth88:
      type: http
      scheme: bearer
      bearerFormat: JWT  # 说明使用 JWT 作为 token 格式
    cookieAuth:
      type: http
      scheme: cookie
      in: cookie
      name: uname

security:
  - JwtAuth88: []  # 全局应用 JWT 认证

paths:
  /wlt/QryFundDetailHdl:
   $ref: './paths/wlt/QryFundDetailHdl.yaml'
  /admin/cfg/SetCfgKv:
    $ref: './paths/cfg/SetCfgKv.yaml'
  /cfg/GetCfg:
    $ref: './paths/cfg/GetCfg.yaml'
  /wlt/ListInsFdPoolLogHdl:
    $ref: './paths/wlt/ListInsFdPoolLogHdl.yaml'
  /wlt/ListInvtCmsLogHdl:
    $ref: './paths/wlt/ListInvtCmsLogHdl.yaml'
  /wlt/ListBetWinLogHdl:
    $ref: './paths/wlt/ListBetWinLogHdl.yaml'
  /admin/wlt/QueryOrdChrgHdr:
    $ref: './paths/adm_wlt/QueryOrdChrgHdr.yaml'
  /admin/wlt/ReviewChrgPassHdr:
    $ref: './paths/adm_wlt/ReviewChrgPassHdr.yaml'
  /admin/wlt/ReviewChrgRefuseHdr:
    $ref: './paths/adm_wlt/ReviewChrgRefuseHdr.yaml'
  /reg:
    $ref: './paths/usr/reg.yaml'
  /login:
    $ref: './paths/usr/login.yaml'
  /users/me:
    $ref: './paths/usr/me.yaml'
  /user/ModifyPwdHdr:
    $ref: './paths/usr/ModifyPwdHdr.yaml'
  /cfg/GetRechargeConfigHdlr:
    $ref: './paths/cfg/GetRechargeConfigHdlr.yaml'

  /admin/cfg/SetRechargeConfigHdlr:
    $ref: './paths/cfg/SetRechargeConfigHdlr.yaml'


  /admin/adm/add:
    $ref: './paths/admin/adm/add.yaml'
  /admin/adm/list:
    $ref: './paths/admin/adm/list.yaml'
  /admin/adm/del:
    $ref: './paths/admin/adm/del.yaml'
  /admin/adm/login:
    $ref: './paths/admin/adm/login.yaml'
  /admin/adm/logout:
    $ref: './paths/admin/adm/logout.yaml'
  /uploads:
    $ref: './paths/common/upld.yaml'
  /res/uploads:
    $ref: './paths/common/getimg.yaml'
  /prxy/getCmsHdr:
    $ref: './paths/prx/getCmsHdr.yaml'
  /user/SetWthdrPwd:
    $ref: './paths/usr/SetWthdrPwdHdr.yaml'

  /user/IsSetWthdrPwdHdr:
    $ref: './paths/usr/IsSetWthdrPwdHdr.yaml'
  /FgtPwdRstPwdHdr:
    $ref: './paths/FgtPwdRstPwdHdr.yaml'
  /FgtPwdGetQuestionByUnameHdr:
    $ref: './paths/FgtPwdGetQuestionByUnameHdr.yaml'
  /user/setScrQstn:
    get:
      tags:
        - user
      summary: 设置用户自定义安全问题
      description: 用于设置用户的安全问题及答案，支持自定义问题文本。
      parameters:
        - name: customQuestionText
          in: query
          required: true
          description: 用户自定义的安全问题内容
          schema:
            type: string
        - name: answer
          in: query
          required: true
          description: 对安全问题的回答
          schema:
            type: string
      responses:
        '200':
          description: 设置成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 安全问题设置成功
  /admin/qryUsr:
   get:
    tags:
       - admin_usr
    summary: 查询用户
    description: 根据用户名分页查询用户列表。
    parameters:
      - name: uname4qry
        in: query
        required: false
        schema:
          type: string
        description: 用户名（模糊匹配）
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
          minimum: 1
        description: 当前页码
      - name: pagesize
        in: query
        required: false
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
        description: 每页数量
    responses:
      '200':
        description: 返回用户列表
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 0
                  description: 返回码，0 表示成功
                msg:
                  type: string
                  example: OK
                total:
                  type: integer
                  description: 用户总数
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1001"
                      username:
                        type: string
                        example: "008"
                      email:
                        type: string
                        example: "008@example.com"
                      status:
                        type: string
                        example: "active"
  /post2:
    post:
      summary: 提交参数 a 和 b
      description: 接收 `a` 和 `b` 作为参数，并返回处理结果
      operationId: post2
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                a:
                  type: integer
                  example: 1
                b:
                  type: integer
                  example: 2
      responses:
        "200":
          description: 成功返回结果
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "处理成功"
                  result:
                    type: integer
                    example: 3

  /coin/frnXchg:
    get:
      tags:
        - coin
      summary: "外汇排行榜"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /coin/goldSilver:
    get:
      tags:
        - coin
      summary: "贵金属"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /coinRank:
    get:
      tags:
        - coin
      summary: "加密货币排行榜"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /list_bets:
    get:
      tags:
        - bet
      summary: "列出投注记录"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /ylwlt/changeLog:
    get:
      tags:
        - ylWallet
      summary: "盈利钱包账变流水"
  /wlt/changeLog:
    get:
      tags:
        - Wallet
      summary: "钱包账变流水"
  /bet/query:
    get:
      tags:
        - bet
      summary: "注单记录列表"
  /logout:
    get:
      tags:
        - user
      summary: "退出"








  /wlt/trans:
    get:
      summary: 转账操作
      description: 进行转账操作
      tags:
        - Wallet
      parameters:
        - name: uname
          in: cookie
          required: true
          description: 用户名（存储于 Cookie 中）
          schema:
            type: string
        - name: changeAmount
          in: query
          required: true
          description: 转账金额
          schema:
            type: number
      responses:
        "200":
          description: 转账成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 转账成功
        "400":
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 无效的转账金额
      examples:
        example-1:
          summary: 示例调用
          description: 以 `changeAmount=8` 进行调用
          value: "/Trans?changeAmount=8"
  /recharge_callback:
    get:
      tags:
        -  Wallet
      summary: "完成充值订单"
      description: "根据订单 ID 完成充值操作"
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "string"
            example: "ORD123456"
          description: "订单 ID (ordid)"
        - name : "status"
          in: "query"
          schema:
            type: "string"
            example: "sucess"
          description: "status"
        - name: "sign"
          in: "query"
          schema:
            type: "string"
            example: "sssss"


      responses:
        "200":
          description: "充值订单完成"
          content:
            application/json:
              schema:
                type: "object"
        "400":
          description: "请求参数错误"
        "404":
          description: "订单未找到"
        "500":
          description: "服务器内部错误"
  /ylwlt/withdraw:
    get:
      tags:
        - ylWallet
      summary: 提现
      description: |
        该接口用于进行提现操作，提现会导致有效金额变化，冻结金额也会变化，最终导致总金额变化。
      parameters:
        - name: amount
          in: query
          description: 提现金额
          required: true
          schema:
            type: integer
            example: 7
        - name: uname
          in: cookie
          description: 用户名
          required: true
          schema:
            type: string
            example: john_doe
      responses:
        '200':
          description: 操作成功，返回提现后的账户信息。
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "提现成功，账户余额已更新"
  /recharge:
    get:

      components:
        securitySchemes:
          cookieAuth:
            type: apiKey
            in: cookie
            name: uname

      security:
        - cookieAuth: [ ]
        - JwtAuth88: [ ]  # 指定此接口支持 JWT 认证
      tags:
        - Wallet
      summary:   充值
      description: This endpoint retrieves recharge header information based on the provided amount and username.
      parameters:
        - $ref: "#/components/parameters/ClientIdHeader"
        - in: query
          name: amt
          required: true
          schema:
            type: integer
            example: 888
          description: The amount to be recharged.
        - in: cookie
          name: uname
          required: true
          schema:
            type: string
            default: "007"
          description: The username for the request.
      responses:
        '200':
          description: Successful response with recharge details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      rechargeId:
                        type: integer
                        example: 12345
                      amount:
                        type: integer
                        example: 888

        '500':
          description: Internal server error.
  /bet:
    get:
      tags:
        - bet
      summary: 投注
      description: ""
      operationId: getBet
      parameters:
        - name: bettxt
          in: query
          required: true
          description: "投注内容"
          schema:
            type: string
            example: "123"
        - name: uname
          in: JwtParam
          required: true
          description: 用户名（从 JwtParam 获取）
          schema:
            type: string
            example: "123"
      responses:
        '200':
          description: 成功响应
        '400':
          description: 错误请求
  /wlt/adjust:
    get:
      tags:
        - Wallet
      summary: "资金调整 中心钱包"
      parameters:
        - name: adjustType
          in: query
          required: true
          description: "调整类型 增加+  减去-"
          schema:
            type: string
            example: "+"

        - name: changeAmount
          in: query
          required: true
          description: "改改的金额  "
          schema:
            type: string
            example: "99"
      responses:
        '200':
          description: 成功响应


  /ylwlt/adjust:
    get:
      tags:
        - ylWallet
      summary: "资金调整 盈利钱包"
      parameters:
        - name: adjustType
          in: query
          required: true
          description: "调整类型 增加+  减去-"
          schema:
            type: string
            example: "+"

        - name: changeAmount
          in: query
          required: true
          description: "改改的金额  "
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: 成功响应