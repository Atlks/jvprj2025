

openapi: 3.0.0
info:
  title: 用户端 API
  version: 89.v250510
  description: |
    这是一个用于系统的 API。通过该 API，可以作为开发。
    该文档提供了所有可用接口的详细说明。
    用户规范参照了oauth/openid，密码方面规参照 OWASP ，金融账户与交易规范参照open banking/obie v3标准，代理方面为自定模式
    

  contact:
    name: dddddomas
    email: support@example.com
servers:
  - url: http://localhost:8889
    description: 本地环境
  - url: http://18.136.123.232:8889
    description: 测试环境

  - url: http://localhost:8888
    description: 生产环境

tags:

  - name: user
    description: 用户方面接口
  - name: secury
    description: 账户安全方面接口
  - name: Account
    description: 钱包方面接口

  - name: coin
    description: 加密货币外汇贵金属方面接口
  - name: AccountInvst
    description: 盈利钱包方面接口
  - name : wthdr
    description: 取现方面接口
  - name: agt
    description: 代理方面接口
  - name: trans_recharge
    description: 充值支付方面接口
  - name: common
    description: 基础接口

  - name: cfg
    description: 获取配置方面接口
  - name: adm_opmng
    description: 管理端接口-运营管理
  - name: admin
    description: 管理端接口-管理员管理

  - name: rpt
    description: 管理端接口-报表管理
  - name: invstRcd
    description: 管理端接口-投资记录管理

  - name: role
    description: 管理后台——自定义角色
  - name: fdList
    description: 资金明细

components:
  parameters:
    unamexx:
      name: uname
      in: cookie
      required: true
      schema:
        type: string
        default: "007"
    ClientIdHeader:
      name:  AuthChkMode
      in: header
      required: false
      schema:
        type: string
        default: "jwt"
      description:  cookie or jwt

  securitySchemes:
    JwtAuth88:
      type: http
      scheme: bearer
      bearerFormat: JWT  # 说明使用 JWT 作为 token 格式
    cookieAuth:
      type: http
      scheme: cookie
      in: cookie
      name: uname

security:
  - JwtAuth88: []  # 全局应用 JWT 认证

paths:
  /usrStt/RankMmbrNAgtSttHdl:
    get:
      tags:
        - rpt
      summary: " 数据报表》排行榜 （用户统计）"
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'


  /wlt/ListTrsxBnsHdl:
     $ref: './paths/wlt/ListTrsxBnsHdl.yml'
  /wlt/findBalanceOverviewHdl:
    $ref: './paths/wlt/findBalanceOverviewHdl.yml'
  /wlt/Trans:
    $ref: './paths/acc/trans.yml'
  /admin/wthdr/ReviewWthdrReqOrdRejectHdr:
    $ref: './paths/wthdr/ReviewWthdrReqOrdRejectHdr.yaml'
  /api/token:
    $ref: './paths/usr/token.yaml'
  /api/userinfo:
    $ref: './paths/usr/me.yaml'
  /wthdr/WthdReqHdl:
    $ref: './paths/ylwlt/WthdReqHdl.yaml'
  /wthdr/WthdrawReviewQryHdl:
    $ref: './paths/ylwlt/WthdrawReviewQryHdl.yaml'
  /admin/wlt/ReviewWthdrReqOrdPassHdr:
    $ref: './paths/wthdr/ReviewWthdrReqOrdPassHdr.yaml'
  /admin/InvstRcd/AddInvstRcdHdl:
    $ref: './paths/InvstRcd/AddInvstRcdHdl.yaml'
  /admin/InvstRcd/QryInvstRcdHdl:
    $ref: './paths/InvstRcd/QryInvstRcdHdl.yaml'
  /pay/recharge:
    $ref: './paths/pay/recharge.yml'
  /cfg/IniDataHdl:
    $ref: './paths/cfg/IniDataHdl.yaml'
  /cfg/GetCfg?k=DataSummary:
    $ref: './paths/cfg/GetCfgDataSummary.yaml'
  /cfg/GetCfg?k=MbrVipCfg:
    $ref: './paths/cfg/GetMbrVipCfg.yaml'
  /cfg/GetCfg?k=CmsLvCfg:
    $ref: './paths/cfg/GetCmsLvCfg.yaml'
  /agt/QryAgtHdl:
    $ref: './paths/agt/QryAgtHdl.yaml'
  /agt/listSubHdl:
    $ref: './paths/agt/listSubHdl.yaml'
  /agt/listSupHdl:
    get:
      tags:
        - agt
      summary: " 查询代理上级"
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /role/FindRoleHdl:
    get:
      tags:
        - role
      summary: " "
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /role/DelRoleHdl:
    get:
      tags:
        - role
      summary: " "
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /db/QryHdl:
    get:

      summary: " "
      parameters:
        - name: sql
          in: query
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'
  /db/UpdtHdl:
    get:

      summary: " "
      parameters:
        - name: sql
          in: query
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'
  /admin/InvstRcd/QryIvstTopOvrvw:
    get:
      tags:
        - invstRcd
      summary: "投资记录界面上面的统计部分"

      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'
  /wlt/QryFundDetailHdl:
    get:
      tags:
        - fdList
      summary: "资金明细 用户端"

      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'
  /rpt/DataSummray:
    get:
      tags:
        - rpt
      summary: "数据报表-数据总览
"

      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /cms/WthdrCmsHdl:
    get:
      tags:
        - cms
      summary: "提取佣金"
      parameters:
        - name: uname
          in: query
          required: false
          schema:
            type: string
          description:
          example: "666"
        - name: amt
          in: query
          required: true
          schema:
            type: int
          description:
          example: 100
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'
  /agt/listMyMmbr:
    get:
      tags:
        - agt
      summary: "列出本人下级会员"
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /agt/MyAgtInfo:
    get:
      tags:
        - agt
      summary: "查询本人信息作为代理"
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'


  /admin/QryFundDetailHdl:
    get:
      tags:
        - fdList
      summary: "资金明细 管理端"
      parameters:
        - name: uname
          in: query
          required: false
          schema:
            type: string
          description:
          example: "666"
        - name: day
          in: query
          required: false
          schema:
            type: int
          description:
          example: 300
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'


  /admin/role/ListRolesHdl:
   $ref: './paths/role/ListRolesHdl.yaml'
  /admin/role/SaveRolesHdl:
     $ref: './paths/role/SaveRolesHdl.yaml'
  /wlt/QryWltHdl:
     $ref: './paths/wlt/QryWltHdl.yaml'
  /wlt/MeWlt:
    $ref: './paths/wlt/MeWlt.yaml'

  /admin/cfg/SetCfgKv:
    $ref: './paths/cfg/SetCfgKv.yaml'
  /cfg/GetCfg:
    $ref: './paths/cfg/GetCfg.yaml'
  /wlt/ListInsFdPoolLogHdl:
    $ref: './paths/wlt/ListInsFdPoolLogHdl.yaml'
  /wlt/ListInvtCmsLogHdl:
    $ref: './paths/wlt/ListInvtCmsLogHdl.yaml'
  /wlt/ListIvstProfitHdl:
    $ref: './paths/wlt/ListIvstProfitHdl.yaml'

  /admin/wlt/QueryOrdChrgHdr:
    $ref: './paths/pay/QueryOrdChrgHdr.yaml'
  /admin/wlt/ReviewChrgPassHdr:
    $ref: './paths/pay/ReviewChrgPassHdr.yaml'
  /admin/wlt/ReviewChrgRefuseHdr:
    $ref: './paths/pay/ReviewChrgRefuseHdr.yaml'
  /reg:
    $ref: './paths/usr/reg.yaml'
  /login:
    $ref: './paths/usr/login.yaml'
  /users/me:
    $ref: './paths/usr/me.yaml'
  /user/ModifyPwdHdr:
    $ref: './paths/usr/ModifyPwdHdr.yaml'
  /cfg/GetRechargeConfigHdlr:
    $ref: './paths/cfg/GetRechargeConfigHdlr.yaml'

  /admin/cfg/SetRechargeConfigHdlr:
    $ref: './paths/cfg/SetRechargeConfigHdlr.yaml'


  /admin/AddAdminHdr:
    $ref: './paths/admin/adm/add.yaml'
  /admin/ListAdmHdr:
    $ref: './paths/admin/adm/list.yaml'
  /admin/adm/del:
    $ref: './paths/admin/adm/del.yaml'
  /admin/login:
    $ref: './paths/admin/adm/login.yaml'
  /admin/adm/logout:
    $ref: './paths/admin/adm/logout.yaml'
  /uploads:
    $ref: './paths/common/upld.yaml'
  /res/uploads:
    $ref: './paths/common/getimg.yaml'

  /user/SetWthdrPwd:
    $ref: './paths/usr/SetWthdrPwdHdr.yaml'

  /user/IsSetWthdrPwdHdr:
    $ref: './paths/usr/IsSetWthdrPwdHdr.yaml'
  /FgtPwdRstPwdHdr:
    $ref: './paths/FgtPwdRstPwdHdr.yaml'
  /FgtPwdGetQuestionByUnameHdr:
    $ref: './paths/FgtPwdGetQuestionByUnameHdr.yaml'
  /user/SetEmlHdl:
    $ref: './paths/usr/SetEmlHdl.yaml'

  /myWltAdrs/ListWltAddrHdl:
    get:
      tags:
        - user
      summary: "审核读取钱包地址"
      description: ""


      responses:
        "200":
          $ref: '../../components/responses/CommonResponse.yaml'
  /myWltAdrs/ReviewWltAdrsHdl:
    get:
      tags:
        - user
      summary: "审核钱包地址 通过或拒绝"
      description: ""
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID，不能为空
          example: "666"

        - name: stat
          in: query
          required: true
          schema:
            type: string
          description: 状态字段，
          example: "Completed"


      responses:
        "200":
          $ref: '../../components/responses/CommonResponse.yaml'
  /myWltAdrs/GetMyWltAddrHdl:
    $ref: './paths/usr/GeMyWltAddrHdl.yaml'
  /myWltAdrs/SetMyWltAddrHdl:
    $ref: './paths/usr/SeMyWltAddrHdl.yaml'
  /usr/QryNextLvMbrHdl:
    $ref: './paths/usr/QryNextLvMbrHdl.yaml'
  /user/setScrQstn:
    $ref: './paths/usrSecury/setScrQstn.yaml'
  /invstAcc/me:
    get:
      tags:
        - AccountInvst
      summary: 查询投资盈利账户
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'

  /admin/qryUsr:
   get:
    tags:
       - admin_usr
    summary: 查询用户
    description: 根据用户名分页查询用户列表。
    parameters:
      - name: uname4qry
        in: query
        required: false
        schema:
          type: string
        description: 用户名（模糊匹配）
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
          minimum: 1
        description: 当前页码
      - name: pagesize
        in: query
        required: false
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
        description: 每页数量
    responses:
      '200':
        description: 返回用户列表
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 0
                  description: 返回码，0 表示成功
                msg:
                  type: string
                  example: OK
                total:
                  type: integer
                  description: 用户总数
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1001"
                      username:
                        type: string
                        example: "008"
                      email:
                        type: string
                        example: "008@example.com"
                      status:
                        type: string
                        example: "active"
  /post2:
    post:
      summary: 提交参数 a 和 b
      description: 接收 `a` 和 `b` 作为参数，并返回处理结果
      operationId: post2
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                a:
                  type: integer
                  example: 1
                b:
                  type: integer
                  example: 2
      responses:
        "200":
          description: 成功返回结果
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "处理成功"
                  result:
                    type: integer
                    example: 3

  /coin/frnXchg:
    get:
      tags:
        - coin
      summary: "外汇排行榜"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /coin/goldSilver:
    get:
      tags:
        - coin
      summary: "贵金属"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string
  /coinRank:
    get:
      tags:
        - coin
      summary: "加密货币排行榜"
      responses:
        "200":
          description: ""
          content:
            text/plain:
              schema:
                type: string

  /ylwlt/changeLog:
    get:
      tags:
        - ylWallet
      summary: "盈利钱包账变流水"
  /wlt/changeLog:
    get:
      tags:
        - Wallet
      summary: "钱包账变流水"

  /logout:
    get:
      tags:
        - user
      summary: "退出"
      responses:
        "200":
          $ref: './components/responses/CommonResponse.yaml'












  /admin/wlt/adjust:
    get:
      tags:
        - Account
      summary: "资金调整 钱包"
      parameters:
        - name: accountSubType
          in: query
          required: true
          schema:
            type: string
            enum: [ EMoney, GeneralInvestment ]
          description: |
            额度类型账户（如：本金、奖励金等）
            - EMoney: 本金钱包
            - GeneralInvestment: 投资账户盈利钱包
          example: EMoney

        - name: transactionCode
          in: query
          required: true
          schema:
            type: string
            enum: [ adjst_crd, adjst_dbt, adjst_frz, adjust_unfrz ]
          description: |
            调整类型（如：增加、减少、冻结、解冻）
            - adjst_crd: 加款
            - adjst_dbt: 扣款
            - adjst_frz: 冻结
            - adjust_unfrz: 解冻
          example: adjst_crd

        - name: uname
          in: query
          required: true
          schema:
            type: string
          description: 会员账号（用户唯一标识）
          example: user_12345

        - name: adjustAmount
          in: query
          required: true
          schema:
            type: number
            format: double
          description: 调整金额（单位：元）
          example: 100.00

        - name: remark
          in: query
          required: false
          schema:
            type: string
          description: 调整备注
          example: 手动调账 - 奖励活动
      responses:
        '200':
          description: 成功响应

  /password/reset/request:
    get:
      tags:
        - secury
      summary: 请求充值密码-获取问题 security question by username
      description: 
      parameters:
      - name: username
        in: query
        required: true
        description: Username of the user requesting the security question
        schema:
          type: string
      responses:
        '200':
          description: Security question returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  question:
                    type: string
                    example: What is your first pet's name?
        '404':
          description: User not found

  /password/reset/confirm:
    post:
      tags:
        - secury
      summary: 重置密码by安全问题
      description: 
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                answer:
                  type: string
                newPassword:
                  type: string
                confirmPassword:
                  type: string
              required:
                - username
                - answer
                - newPassword
                - confirmPassword    
      responses:
        '200':
          description: Password successfully reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password has been reset successfully
        '400':
          description: Invalid answer or password mismatch
        '404':
          description: User not found

  /api/security-question/setup:
    post:
      tags:
        - secury
      summary: 设置安全问题与答案
      description:  
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                userId:
                  type: string
                question:
                  type: string
                answer:
                  type: string
              required:
                - userId
                - question
                - answer
      responses:
        '200':
          description: Question setup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Security question saved
  /ylwlt/adjust:
    get:
      tags:
        - ylWallet
      summary: "资金调整 盈利钱包"
      parameters:
        - name: adjustType
          in: query
          required: true
          description: "调整类型 增加+  减去-"
          schema:
            type: string
            example: "+"

        - name: changeAmount
          in: query
          required: true
          description: "改改的金额  "
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: 成功响应